{
  // ========== Theme ==========
  "workbench.iconTheme": "material-icon-theme", // icon テーマ
  "editor.semanticTokenColorCustomizations": null,
  "workbench.colorTheme": "One Dark Pro",

  // ========== Emmet ==========
  "emmet.excludeLanguages": ["markdown"], // emmetを適用しない
  "emmet.includeLanguages": {
    // emmetを適用する
    "erb": "html",
    "scss": "css",
    "javascript": "javascriptreact"
  },

  // ========== Formatter ==========
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true, // ファイル保存時にESLintでフォーマット
    "source.fixAll.stylelint": true // ファイル保存時にstylelintでフォーマット
  },
  "eslint.packageManager": "yarn",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescriptreact",
    {
      "language": "vue",
      "autoFix": true
    }
  ],
  "eslint.autoFixOnSave": true,

  // ========== Prateter ==========
  "prettier.eslintIntegration": true, // ファイル保存時にPrettierでフォーマット
  "editor.defaultFormatter": "esbenp.prettier-vscode",

  // ========== Stylelint ==========
  "css.validate": false,
  "less.validate": false,
  "scss.validate": false,
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.includeLanguages": {
    "javascriptreact": "html",
    "typescriptreact": "html",
    "plaintext": "html"
  },
  "editor.quickSuggestions": {
    "strings": true
  },

  // ========== Common ==========
  // "files.autoSave": "off", // オートセーブのタイミング
  "files.autoSave": "onFocusChange",

  // ========== LiveSassCompile ==========
  "liveSassCompile.settings.formats": [
    {
      "format": "expanded",
      "extensionName": ".css",
      "savePath": "/css/"
    }
  ],

  // ========== Vim ==========
  "vim.normalModeKeyBindingsNonRecursive": [
    { "before": ["<C-d>"], "after": ["g", "b"] } // マルチカーソル,
  ],

  // ========== Java ==========
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "java.home": "/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk/Contents/Home",
  "java.refactor.renameFromFileExplorer": "autoApply",
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "java.semanticHighlighting.enabled": true,
  "csscomb.preset": "csscomb",
  "files.associations": {
    "*.vue": "vue",
    "*.gs": "javascript"
  },
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "editor.detectIndentation": false,
  "editor.tabSize": 2,
  "cSpell.userWords": ["Tollero"],
  "tabnine.experimentalAutoImports": true,
  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": "\\.java$",
        "cmd": "google-java-format --replace ${file}"
      }
    ]
  },

  // ========== Go ==========
  /*
  "go.alternateTools": {
    "go-langserver": "gopls"
  },
  "go.buildOnSave": "package",
  "go.formatTool": "goimports",
  "go.formatFlags": ["-w"],
  "go.gocodeAutoBuild": true,
  "go.installDependenciesWhenBuilding": true,
  "go.languageServerExperimentalFeatures": {
    "hover": true,
    "format": true,
    "rename": true,
    "diagnostics": true,
    "autoComplete": false,
    "signatureHelp": true,
    "goToDefinition": true,
    "findReferences": true,
    "documentSymbols": true,
    "workspaceSymbols": true,
    "goToTypeDefinition": true,
    "goToImplementation": true
  },
  "go.lintTool": "golint",
  "go.lintOnSave": "package",
  "gopls": {
    "deepCompletion": true,
    "usePlaceholders": false,
    "completeUnimported": true
  },
  "go.testOnSave": false,
  "go.useLanguageServer": true,
  "go.vetOnSave": "package",
  */
  "liveServer.settings.donotVerifyTags": true,
  "liveServer.settings.donotShowInfoMsg": true,
  "telemetry.enableTelemetry": false,
  "workbench.startupEditor": "newUntitledFile",
  "stylelint.enable": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.editorAssociations": [
    {
      "viewType": "jupyter.notebook.ipynb",
      "filenamePattern": "*.ipynb"
    }
  ],
  "editor.accessibilitySupport": "off",
  "editor.formatOnSave": true
}
